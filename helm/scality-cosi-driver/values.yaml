image:
  repository: ghcr.io/scality/cosi-driver
  tag:
  pullPolicy: IfNotPresent


replicaCount: 1

# Log levels define the verbosity of logs for various parts of the system.
# Use these levels to control the detail included in the logs:
# 1 - General configuration, routine logs
# 2 - Steady-state operations, HTTP requests, system state changes (default)
# 3 - Extended changes, additional system details
# 4 - Debug-level logs, tricky logic areas
# 5 - Trace-level logs, context for troubleshooting
logLevels:
  driver: "2"
  sidecar: "2"


namespace: container-object-storage-system
fullnameOverride: scality-cosi-driver


serviceAccount:
  name: scality-cosi-driver-provisioner
  create: true

metrics:
  enabled: true
  port: 8080
  prefix: "scality_cosi_driver"
  address: "0.0.0.0:8080"
  path: "/metrics"

traces:
  # Configure tracing for the application.

  # If both `otel_stdout` and `otel_endpoint` are set, `otel_stdout` takes precedence.
  # Set `otel_stdout: false` and `otel_endpoint: ""` to disable tracing entirely.

  # The endpoint of the trace collector to which traces will be sent.
  # Use an empty string ("") to disable endpoint-based trace collection.
  # Use the format "http://<host>:<port>/v1/trace" to specify the collector endpoint.
  otel_endpoint: ""

  # Enable stdout tracing by setting this to true. When enabled, traces will be printed
  # to the console instead of being sent to the collector endpoint.
  otel_stdout: false

  # The name of the service to appear in trace spans, used for identification
  # in observability tools.
  otel_service_name: "cosi.scality.com"

resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"


env:
  POD_NAMESPACE:
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace


version: 1.0.0
